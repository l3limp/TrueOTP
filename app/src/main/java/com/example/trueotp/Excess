****Truecaller verification activity****

package com.example.trueotp;

import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Toast;

import com.truecaller.android.sdk.ITrueCallback;
import com.truecaller.android.sdk.TrueError;
import com.truecaller.android.sdk.TrueProfile;
import com.truecaller.android.sdk.TruecallerSDK;
import com.truecaller.android.sdk.TruecallerSdkScope;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
public class UserVerificationActivity extends AppCompatActivity {

//    private static final int LANDING_LAYOUT  = 1;
//    private int        verificationCallbackType;

    private final ITrueCallback sdkCallback = new ITrueCallback() {
        @Override
        public void onSuccessProfileShared(@NonNull final TrueProfile trueProfile) {
            Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
                    "Verified Truecaller User: " + trueProfile.firstName,
                    Toast.LENGTH_SHORT).show();
//            showLayout(LANDING_LAYOUT);
            startActivity(new Intent(UserVerificationActivity.this, SignedIn.class));
        }

        @Override
        public void onFailureProfileShared(@NonNull final TrueError trueError) {
            Toast.makeText(UserVerificationActivity.this.getApplicationContext(), "onFailureProfileShared: " + trueError.getErrorType(), Toast
                    .LENGTH_SHORT).show();
//            showLayout(LANDING_LAYOUT);
        }

        @Override
        public void onVerificationRequired(final TrueError trueError) {
            Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
                    "Verification Required",
                    Toast.LENGTH_SHORT).show();
        }
    };

//    private final VerificationCallback apiCallback = new VerificationCallback() {
//
//        @Override
//        public void onRequestSuccess(final int requestCode, @Nullable VerificationDataBundle bundle) {
//            if (requestCode == VerificationCallback.TYPE_MISSED_CALL_INITIATED) {
//                verificationCallbackType = VerificationCallback.TYPE_MISSED_CALL_INITIATED;
//                String ttl = bundle.getString(VerificationDataBundle.KEY_TTL);
//                if (ttl != null) {
//                    Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                            "Missed call initiated with TTL : " + ttl,
//                            Toast.LENGTH_SHORT).show();
//                }
//            } else if (requestCode == VerificationCallback.TYPE_MISSED_CALL_RECEIVED) {
//                Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                        "Missed call received",
//                        Toast.LENGTH_SHORT).show();
//            } else if (requestCode == VerificationCallback.TYPE_OTP_INITIATED) {
//                verificationCallbackType = VerificationCallback.TYPE_OTP_INITIATED;
//                String ttl = bundle.getString(VerificationDataBundle.KEY_TTL);
//                if (ttl != null) {
//                    Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                            "OTP initiated with TTL : " + bundle.getString(VerificationDataBundle.KEY_TTL),
//                            Toast.LENGTH_SHORT).show();
//                }
//            } else if (requestCode == VerificationCallback.TYPE_OTP_RECEIVED) {
//                Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                        "OTP received",
//                        Toast.LENGTH_SHORT).show();
////                String OTP = bundle.getString(VerificationDataBundle.KEY_OTP);
//            } else if (requestCode == VerificationCallback.TYPE_PROFILE_VERIFIED_BEFORE) {
//                Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                        "Profile verified for your app before: " + bundle.getProfile().firstName
//                                + " and access token: " + bundle.getProfile().accessToken,
//                        Toast.LENGTH_SHORT).show();
//                showLayout(LANDING_LAYOUT);
//                startActivity(new Intent(UserVerificationActivity.this, SignedIn.class));
//            } else {
//                Toast.makeText(UserVerificationActivity.this.getApplicationContext(),
//                        "Success: Verified with" + getViaText() + " with " + bundle.getString(VerificationDataBundle.KEY_ACCESS_TOKEN),
//                        Toast.LENGTH_SHORT).show();
//                showLayout(LANDING_LAYOUT);
//                startActivity(new Intent(UserVerificationActivity.this, SignedIn.class));
//            }
//        }
//
//        @Override
//        public void onRequestFailure(final int requestCode, @NonNull final TrueException e) {
//            Toast.makeText(
//                    UserVerificationActivity.this.getApplicationContext(),
//                    "OnFailureApiCallback: " + e.getExceptionType() + "\n" + e.getExceptionMessage(),
//                    Toast.LENGTH_SHORT)
//                    .show();
//        }
//    };
//
//    @NonNull
//    private String getViaText() {
//        String viaText = "Unknown";
//        if (verificationCallbackType == VerificationCallback.TYPE_OTP_INITIATED) {
//            viaText = "OTP";
//        } else if (verificationCallbackType == VerificationCallback.TYPE_MISSED_CALL_INITIATED) {
//            viaText = "MISSED CALL";
//        }
//        return viaText;
//    }
//
    //**********Click listeners  *************//
//    private final View.OnClickListener verifyClickListener = new View.OnClickListener() {
//        @Override
//        public void onClick(final View view) {
//            String otp = edtOtp.getText().toString().trim();
//
//            if (verificationCallbackType == VerificationCallback.TYPE_OTP_INITIATED) {
//                Toast.makeText(UserVerificationActivity.this, "OTP Initiated", Toast.LENGTH_SHORT).show();
//                if (TextUtils.isEmpty(otp)) {
//                    return;
//                }
//            }
//        }
//    };

    private final View.OnClickListener startClickListener = view -> {
        try {
            TruecallerSDK.getInstance().getUserProfile(UserVerificationActivity.this);
        } catch (Exception e) {
            Toast.makeText(UserVerificationActivity.this.getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();
        }
    };

//    @SuppressLint("NewApi")
//    private final View.OnClickListener btnGoClickListner = v -> {
//        initTruecallerSDK();
//        showLayout(LANDING_LAYOUT);
//    };

    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_user_verification);

//        showLayout(LANDING_LAYOUT);

        findViewById(R.id.btnStart).setOnClickListener(startClickListener);

        initTruecallerSDK();
    }

    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
    private void initTruecallerSDK() {
        TruecallerSdkScope trueScope = new TruecallerSdkScope.Builder(this, sdkCallback)
                .consentMode(TruecallerSdkScope.CONSENT_MODE_BOTTOMSHEET)
                .footerType(TruecallerSdkScope.FOOTER_TYPE_NONE)
                .sdkOptions(TruecallerSdkScope.SDK_OPTION_WITHOUT_OTP)
                .build();
        TruecallerSDK.init(trueScope);

        findViewById(R.id.btnStart).setVisibility(TruecallerSDK.getInstance().isUsable() ? View.VISIBLE : View.GONE);
    }

//    public void requestVerification() {
//        final String phone = mPhoneField.getText().toString().trim();
//        if (!TextUtils.isEmpty(phone)) {
//            TruecallerSDK.getInstance().requestVerification("IN", phone, apiCallback, this);
//        }
//    }

    @Override
    protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        TruecallerSDK.getInstance().onActivityResultObtained(this, requestCode, resultCode, data);
    }

//    public void showLayout(int id) {
//        findViewById(R.id.landingLayout).setVisibility(id == LANDING_LAYOUT ? View.VISIBLE : View.GONE);
//        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
//        assert imm != null;
//        imm.hideSoftInputFromWindow(findViewById(R.id.landingLayout).getWindowToken(), 0);
//    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        TruecallerSDK.clear();
    }
}


***** Landing layout *****
// make an xml "landing.xml" and add this code

<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:orientation="vertical">

        <ImageView
            android:layout_width="128dp"
            android:layout_height="128dp"
            android:layout_marginBottom="20dp"
            android:src="@drawable/com_truecaller_icon"
            android:rotation="270"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:text="@string/app_name"
            android:textColor="@color/teal_700" />
    </LinearLayout>

    <RelativeLayout
        android:id="@+id/btnStart"
        android:padding="@dimen/com_truecaller_truebutton_padding"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginLeft="16dp"
        android:layout_marginRight="16dp"
        android:background="@color/teal_700"
        android:onClick="onGetStarted"
        android:layout_gravity="bottom"
        android:paddingBottom="20dp"
        android:orientation="horizontal">

        <ImageView
            android:id="@+id/profileImage"
            android:layout_width="32dp"
            android:layout_height="32dp"
            android:layout_centerVertical="true"
            android:src="@drawable/com_truecaller_icon"/>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_gravity="center_vertical"
            android:gravity="center_vertical|center_horizontal"
            android:orientation="vertical"
            android:paddingStart="8dp"
            android:paddingEnd="8dp">

            <TextView
                android:id="@+id/txtTitle"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/get_started"
                android:textColor="#fff"
                android:textSize="18sp" />

        </LinearLayout>
    </RelativeLayout>

</FrameLayout>


//    private static final String SMS_RECEIVED = "android.provider.Telephony.SMS_RECEIVED";
//    private static final String TAG = "SmsBroadcastReceiver";
//
//    String msg,phoneNo = "";
//
//    @Override
//    public void onReceive(Context context, Intent intent) {
//
//
//        if (intent.getAction()==SMS_RECEIVED){
//
//            Bundle dataBundle = intent.getExtras();
//
//            if(dataBundle!=null){
//
//                Object[] mypdu = (Object[]) dataBundle.get("pdus");
//                final SmsMessage[] message = new SmsMessage[mypdu.length];
//
//                for (int i = 0; i <mypdu.length ; i++) {
//
//
//                    // for build versions  >= API level 23
//                    if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){
//
//                        String format = dataBundle.getString("format");
//                        //from PDU we will get all objects and SmsMessage Object using following line of code
//                        message[i]  = SmsMessage.createFromPdu((byte[])mypdu[i],format);
//                    }
//                    else{
//                        //<API level 23
//                        message[i] = SmsMessage.createFromPdu((byte[])mypdu[i]);
//                    }
//
//                    msg = message[i].getMessageBody();
//                    phoneNo = message[i].getOriginatingAddress();
//
//
//                }
//
//                Toast.makeText(context, "Message : "+msg + "\nNumber: "+phoneNo, Toast.LENGTH_LONG).show();
//
//            }
//
//        }
//
//    }